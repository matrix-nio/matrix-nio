# generated by datamodel-codegen:
#   filename:  key_backup_session_data.yaml
#   timestamp: 2024-06-01T22:41:32+00:00

from __future__ import annotations

from typing import Dict, List

from pydantic import BaseModel, Field


class SessionData(BaseModel):
    algorithm: str = Field(
        ...,
        description="The end-to-end message encryption algorithm that the key is for. Must be `m.megolm.v1.aes-sha2`.",
    )
    forwarding_curve25519_key_chain: List[str] = Field(
        ...,
        description="Chain of Curve25519 keys through which this session was forwarded, via [m.forwarded_room_key](#mforwarded_room_key) events.",
    )
    sender_key: str = Field(
        ..., description="Unpadded base64-encoded device Curve25519 key."
    )
    sender_claimed_keys: Dict[str, str] = Field(
        ...,
        description="A map from algorithm name (`ed25519`) to the Ed25519 signing key of the sending device.",
    )
    session_key: str = Field(
        ...,
        description="Unpadded base64-encoded session key in [session-export format](https://gitlab.matrix.org/matrix-org/olm/blob/master/docs/megolm.md#session-export-format).",
    )
