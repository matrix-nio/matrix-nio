# generated by datamodel-codegen:
#   filename:  request_token_response.yaml
#   timestamp: 2024-06-01T22:41:39+00:00

from __future__ import annotations

from typing import Optional

from pydantic import AnyUrl, BaseModel, Field


class RequestTokenResponse(BaseModel):
    sid: str = Field(
        ...,
        description="The session ID. Session IDs are opaque strings that must consist entirely\nof the characters `[0-9a-zA-Z.=_-]`. Their length must not exceed 255\ncharacters and they must not be empty.",
        examples=["123abc"],
    )
    submit_url: Optional[AnyUrl] = Field(
        None,
        description="An optional field containing a URL where the client must submit the\nvalidation token to, with identical parameters to the Identity Service\nAPI's `POST /validate/email/submitToken` endpoint (without the requirement\nfor an access token). The homeserver must send this token to the user (if\napplicable), who should then be prompted to provide it to the client.\n\nIf this field is not present, the client can assume that verification\nwill happen without the client's involvement provided the homeserver\nadvertises this specification version in the `/versions` response\n(ie: r0.5.0).",
        examples=["https://example.org/path/to/submitToken"],
    )
