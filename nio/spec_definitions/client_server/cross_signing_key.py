# generated by datamodel-codegen:
#   filename:  cross_signing_key.yaml
#   timestamp: 2024-06-01T22:41:28+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class UsageEnum(Enum):
    master = "master"
    self_signing = "self_signing"
    user_signing = "user_signing"


class CrossSigningKey(BaseModel):
    user_id: str = Field(
        ...,
        description="The ID of the user the key belongs to.",
        examples=["@alice:example.com"],
    )
    usage: List[UsageEnum] = Field(..., description="What the key is used for.")
    keys: Dict[str, str] = Field(
        ...,
        description="The public key.  The object must have exactly one property, whose name is\nin the form `<algorithm>:<unpadded_base64_public_key>`, and whose value\nis the unpadded base64 public key.",
        examples=[{"ed25519:alice+base64+public+key": "alice+base64+public+key"}],
    )
    signatures: Optional[Dict[str, Any]] = Field(
        None,
        description="Signatures of the key, calculated using the process described at [Signing JSON](/appendices/#signing-json).\nOptional for the master key. Other keys must be signed by the\nuser\\'s master key.",
        examples=[
            {
                "@alice:example.com": {
                    "ed25519:alice+base64+master+key": "signature+of+key"
                }
            }
        ],
        title="Signatures",
    )
