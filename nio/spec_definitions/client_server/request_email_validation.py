# generated by datamodel-codegen:
#   filename:  request_email_validation.yaml
#   timestamp: 2024-06-01T22:41:38+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field


class RequestEmailValidation(BaseModel):
    client_secret: str = Field(
        ...,
        description="A unique string generated by the client, and used to identify the\nvalidation attempt. It must be a string consisting of the characters\n`[0-9a-zA-Z.=_-]`. Its length must not exceed 255 characters and it\nmust not be empty.\n",
        examples=["monkeys_are_GREAT"],
    )
    email: str = Field(
        ...,
        description="The email address to validate.",
        examples=["alice@example.org"],
    )
    send_attempt: int = Field(
        ...,
        description="The server will only send an email if the `send_attempt`\nis a number greater than the most recent one which it has seen,\nscoped to that `email` + `client_secret` pair. This is to\navoid repeatedly sending the same email in the case of request\nretries between the POSTing user and the identity server.\nThe client should increment this value if they desire a new\nemail (e.g. a reminder) to be sent. If they do not, the server\nshould respond with success but not resend the email.",
        examples=[1],
    )
    next_link: Optional[str] = Field(
        None,
        description="Optional. When the validation is completed, the identity server will\nredirect the user to this URL. This option is ignored when submitting\n3PID validation information through a POST request.",
        examples=["https://example.org/congratulations.html"],
    )


class Model(RequestEmailValidation):
    id_server: Optional[str] = Field(
        None,
        description="The hostname of the identity server to communicate with. May optionally\ninclude a port. This parameter is ignored when the homeserver handles\n3PID verification.\n\nThis parameter is deprecated with a plan to be removed in a future specification\nversion for `/account/password` and `/register` requests.",
        examples=["id.example.com"],
    )
    id_access_token: Optional[str] = Field(
        None,
        description="An access token previously registered with the identity server. Servers\ncan treat this as optional to distinguish between r0.5-compatible clients\nand this specification version.\n\nRequired if an `id_server` is supplied.",
    )
