# generated by datamodel-codegen:
#   filename:  key_backup_data.yaml
#   timestamp: 2024-06-01T22:41:31+00:00

from __future__ import annotations

from typing import Any, Dict

from pydantic import BaseModel, Field


class KeyBackupData(BaseModel):
    first_message_index: int = Field(
        ...,
        description="The index of the first message in the session that the key can decrypt.",
        examples=[1],
    )
    forwarded_count: int = Field(
        ...,
        description="The number of times this key has been forwarded via key-sharing between devices.",
        examples=[0],
    )
    is_verified: bool = Field(
        ...,
        description="Whether the device backing up the key verified the device that the key\nis from.",
        examples=[False],
    )
    session_data: Dict[str, Any] = Field(
        ...,
        description="Algorithm-dependent data.  See the documentation for the backup\nalgorithms in [Server-side key backups](/client-server-api/#server-side-key-backups) for more information on the\nexpected format of the data.",
        examples=[
            {
                "ephemeral": "base64+ephemeral+key",
                "ciphertext": "base64+ciphertext+of+JSON+data",
                "mac": "base64+mac+of+ciphertext",
            }
        ],
    )
