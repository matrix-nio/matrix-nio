[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "matrix-nio"
version = "0.22.0"
description = "A Python Matrix client library, designed according to sans I/O principles."
authors = [
    "Damir JeliÄ‡ <poljar@termina.org.uk>",
    "Paarth Shah <mail@shahpaarth.com>"
]
license = "ISC"
readme = "README.md"
repository = "https://github.com/poljar/matrix-nio"
documentation = "https://matrix-nio.readthedocs.io/en/latest/"
packages = [
    {include = "nio"}
]

[tool.poetry.dependencies]
python = "^3.8.0"
aiohttp = "^3.8.3"
aiofiles = "^23.1.0"
h11 = "^0.14.0"
h2 = "^4.0.0"
jsonschema = "^4.14.0"
unpaddedbase64 = "^2.1.0"
pycryptodome = "^3.10.1"
python-olm = { version = "^3.1.3", optional = true }
peewee = { version = "^3.14.4", optional = true }
cachetools = { version = "^4.2.1", optional = true }
atomicwrites = { version = "^1.4.0", optional = true }
aiohttp-socks = "^0.7.0"

[tool.poetry.extras]
e2e = ["python-olm", "peewee", "cachetools", "atomicwrites"]

[tool.poetry.dev-dependencies]
pytest = "^6.2.3"
pytest-isort = "^1.3.0"
pytest-cov = "^2.11.1"
hyperframe = "^6.0.0"
hypothesis = "^6.8.9"
hpack = "^4.0.0"
faker = "^8.0.0"
mypy = "^0.812"
pytest-aiohttp = "^0.3.0"
types-peewee = "^3.16.0.2"
aioresponses = "^0.7.2"
pytest-benchmark = "^3.2.3"
ruff = "^0.0.291"

[tool.ruff]
select = [
    "E",     # pycodestyle
    "F",     # Pyflakes
    "I001",  # isort
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "FA",    # flake8-future-annotations
    "PT",    # flake8-pytest-style
    "RSE",   # flake8-raise
    "PERF",  # Perflint
    "FURB",  # refurb
]
ignore = [
    "E501",  # https://www.flake8rules.com/rules/E501.html - Let `black` handle this.
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "venv*",
]

# Assume Python 3.8.
target-version = "py38"

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
# Needed for python < 3.10, should be removed afterwards.
keep-runtime-typing = true

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401",
    "F403",
    "I001",
]
[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
